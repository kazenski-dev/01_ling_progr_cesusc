Fazer um CRUD ( Create, Read, Update e Delete) de uma entidade chamada pessoa. Utilize
qual estrutura você achar mais adequada (lista, dicionario, tupla, arquivo, etc)

● Cadastrar, Editar
○ O usuário pode cadastrar/editar pessoa, informando os seguintes dados:
■ Nome
■ Cpf
■ E-mail
○ Ao cadastrar/editar pessoa, o sistema deve validar as seguintes informações:
■ Nome obrigatório
■ Nome deve possuir no máximo 150 caracteres
■ Cpf obrigatório
■ Cpf deve ser um cpf válido
■ E-mail obrigatório
■ E-mail deve ser um e-mail válido
■ E-mail deve possuir no máximo 400 caracteres
■ Cpf não pode ser duplicado, ou seja, não pode ser cadastrado dois responsáveis
com o mesmo cpf

● Remover
○ O sistema deve permitir que o usuário remova pessoas. Esta remoção deve ser lógica,
ou seja, o usuário continuará no sistema, porém você deve utilizar uma marcação para
determinar se ele foi excluído ou não.

● Consultar
○ O usuário pode consultar pessoas com os seguintes filtros:
■ Nome
■ Cpf (formatado e não formatado)
■ E-mail
○ Lembre-se de listar apenas os usuarios que estao ativos.

● use e abuse da orientação a objetos assim com clean code
● Utilize uma classe que representa o menu
● Toda a manipulacao de dados sera na memoria
● Efetuar testes unitarios




MINHAS ANOTAÇÕES:

1- Método de busca com dicionario
Os dicionários possuem um método específico para busca de valores, o get(), no qual podemos passar como parâmetros a chave que queremos e um valor padrão para retornar caso essa chave não seja encontrada:
print(contatos.get('Yan', 'Contato não encontrado'))
print(contatos.get('João', 'Contato não encontrado'))